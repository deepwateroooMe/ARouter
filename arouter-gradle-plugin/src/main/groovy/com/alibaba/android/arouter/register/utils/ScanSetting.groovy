package com.alibaba.android.arouter.register.utils

 // 【亲爱的表哥的活宝妹，任何时候，亲爱的表哥的活宝妹，就是一定要、一定会嫁给活宝妹的亲爱的表哥！！！爱表哥，爱生活！！！】
/**
 * register setting
 * @author billy.qi email: qiyilike@163.com
 * @since 17/3/28 11:27
 */ 
class ScanSetting {
    // 【构建插件】的、名字：埋藏得比较深，在源码定义类里，不在这个插件的 build.groovy 里
    static final String PLUGIN_NAME = "com.alibaba.arouter"
    // 【构建插件】： com.alibaba.arouter 需要被 app 的 build.gradle 索引：apply plugin "com.alibaba.arouter" 才能正常使用
    /**
     * The register code is generated into this class: 【TODO】：这个，说的是什么意思呢？arounter-api 模块，对应目录下，存在这个指定文件
     项目里，这个插件launch 文件夹里，有个arouter-auto-register 插件？定义；专职负责，自动扫描、编译、与生成，指定的类。
     */
    static final String GENERATE_TO_CLASS_NAME = 'com/alibaba/android/arouter/core/LogisticsCenter'
    /**
     * you know. this is the class file(or entry in jar file) name
     */
    static final String GENERATE_TO_CLASS_FILE_NAME = GENERATE_TO_CLASS_NAME + '.class'
    /**
     * The register code is generated into this method
     */
    static final String GENERATE_TO_METHOD_NAME = 'loadRouterMap' // 这个loadRouterMap() 方法调用，应该就是触发【编译插件】自动扫描的、开关机关了
    /**
     * The package name of the class generated by the annotationProcessor: 这个包裹，应该是在编译好的、什么 .class 封装后的 .jar 之类的压缩文件里？要确认
     */
    static final String ROUTER_CLASS_PACKAGE_NAME = 'com/alibaba/android/arouter/routes/'
    /**
     * The package name of the interfaces: 接口的包裹名：【TODO】：自动注册后，它是会被封装成、独立包裹吗？
     */
    private static final INTERFACE_PACKAGE_NAME = 'com/alibaba/android/arouter/facade/template/'

    /**
     * register method name in class: {@link #GENERATE_TO_CLASS_NAME}
     */
    static final String REGISTER_METHOD_NAME = 'register'
    /**
     * scan for classes which implements this interface
     */
    String interfaceName = ''

    /**
     * jar file which contains class: {@link #GENERATE_TO_CLASS_NAME}
     */
    File fileContainsInitClass
    /**
     * scan result for {@link #interfaceName}
     * class names in this list
     */
    ArrayList<String> classList = new ArrayList<>()

    /**
     * constructor for arouter-auto-register settings
     * @param interfaceName interface to scan
     */
    ScanSetting(String interfaceName) {
        this.interfaceName = INTERFACE_PACKAGE_NAME + interfaceName
    }

}